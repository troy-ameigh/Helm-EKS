AWSTemplateFormatVersion: '2010-09-09'
Description: This Cloudformation template shows you how to use Cloudformation to deploy
  WordPress using Helm charts. You will be deploying this into the "Amazon EKS QuickStart" with an Aurora Postgresql DB
  which is a qre-requist. "https://docs.aws.amazon.com/quickstart/latest/amazon-eks-architecture/welcome.html" **WARNING** You will be billed for the AWS resources used if you create a stack from this template.
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Wordpress
        Parameters:
          - wordpressUsername
          - wordpressPassword
      - Label:
          default: Kube Cluster
        Parameters:
          - ClusterName
          - Namespace
          - Name
      - Label:
          default: Aurora (RDS)
        Parameters:
          - DBUsername
          - DBUserPassword
          - DBName
          - Subnet1ID
          - Subnet2ID
          - VPCID
          - NodeGroupSecurityGroupId
          - BastionSecurityGroupId
          - DBSecurityGroupId
          - DBAccessCIDR
      - Label:
          default: Quick Start configuration
        Parameters:
          - QSS3BucketName
          - QSS3BucketRegion
          - QSS3KeyPrefix
    ParameterLabels:
      wordpressUsername:
        default: Wordpress Username
      wordpressPassword:
        default: Wordpress Password
      ClusterName:
        default: EKS Kube Cluster Name
      Namespace:
        default: Kube Namespace for this function
      Name:
        default: Kube Name for this function
      DBUsername:
        default: DB User Name
      DBUserPassword:
        default: DB User Password
      DBName:
        default: Database Name
      DBEndPoint:
        default: AuroraDB EndPoint
      Subnet1ID:
        default: Private Subnet One
      Subnet2ID:
        default: Private Subnet Two
      VPCID:
        default: EKS Stack VPC ID
      NodeGroupSecurityGroupId:
        default: Node SecurityGroup ID
      BastionSecurityGroupId:
        default: Bastion SecurityGroup ID
      DBSecurityGroupId:
        default: RDS DB SecurityGroup ID
      QSS3BucketName:
        default: Quick Start S3 bucket name
      QSS3BucketRegion:
        default: Quick Start S3 bucket region
      QSS3KeyPrefix:
        default: Quick Start S3 key prefix
      DBAccessCIDR:
        default: Database connection CIDR
Parameters:
  QSS3BucketName:
    AllowedPattern: "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$"
    ConstraintDescription: "Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-)."
    Default: aws-quickstart
    Description: "S3 bucket name for the Quick Start assets. Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-)."
    Type: String
  QSS3BucketRegion:
    Default: 'us-east-1'
    Description: 'The AWS Region where the Quick Start S3 bucket (QSS3BucketName) is hosted. When using your own bucket, you must specify this value.'
    Type: String
  QSS3KeyPrefix:
    AllowedPattern: "^[0-9a-zA-Z-/]*$"
    ConstraintDescription: "Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/)."
    Default: quickstart-amazon-aurora-postgresql/
    Description: "S3 key prefix for the Quick Start assets. Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/)."
    Type: String
  wordpressUsername:
    AllowedPattern: ^[a-z][a-z0-9_]*$
    ConstraintDescription: User name parameter must be lowercase, begin with a letter,
      contain only alphanumeric characters or underscores, and be less than 60 characters.
    Default: admin
    Description: 'The user name that is associated with the master user account for
      Wordpress. The user name must contain fewer than 60 alphanumeric
      characters or underscores, and must be lowercase and begin with a letter. '
    MaxLength: '60'
    MinLength: '1'
    Type: String
  wordpressPassword:
    Description: 'The password that is associated with the master user account for
      Wordpress. The password must contain 8 to 64 printable ASCII
      characters, excluding: /, ", \'', \ and @. It must contain one uppercase letter,
      one lowercase letter, and one number.'
    MaxLength: '64'
    NoEcho: 'true'
    Type: String
  ClusterName:
    Description: 'Use the "EKSClusterName" from the EKSStack outputs section in CloudFormation.'
    Type: String
  Namespace:
    Description: 'Modify to use a custom Namespace. The Namespace up to 63 characters
    long. The characters allowed in names are: digits (0-9), lower case letters (a-z),
    and underscore(s)(cannot start or end with)'
    Type: String
    Default: "example-helm-rds"
  Name:
    Description: 'Modify to use a custom Names. The Names up to 253 characters
    long. The characters allowed in names are: digits (0-9), lower case letters (a-z), -,
    and ..'
    Type: String
    Default: "myrelease-rds"
  DBUsername:
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric characters.
    Default: mariadb
    Description: "The database admin account username"
    MaxLength: '16'
    MinLength: '1'
    NoEcho: 'true'
    Type: String
  DBUserPassword:
    AllowedPattern: '(?=^.{6,255}$)((?=.*\\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[^A-Za-z0-9])(?=.*[a-z])|(?=.*[^A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9]))^.*'
    ConstraintDescription: "Min 8 chars. Must include 1 uppercase, 1 lowercase, 1 number, 1 (non / @ \" ') symbol"
    Description: "Password for the master ('mariadb') account. Password must meeting the following: Min 8 chars. Must include 1 uppercase, 1 lowercase, 1 number, 1 (non / @ \" ') symbol."
    MinLength: 8
    MaxLength: 128
    NoEcho: true
    Type: String
  DBName:
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric characters. Cannot be longer than 64 charcters.
    Default: wordpress
    Description: "The database name to create."
    MaxLength: '64'
    MinLength: '1'
    Type: String
  DBPort:
    Description: "The RDS Aurora DB port."
    Type: String
    Default: 3306
  DBSecurityGroupId:
     Description: 'Get DBSecurityGroupId from the Aurora MySql DB Stack outputs section in CloudFormation.'
     Type: String
  Subnet1ID:
    Description: 'Get Private Subnet 1 ID from the VPCStack outputs section in CloudFormation.'
    Type: AWS::EC2::Subnet::Id
  Subnet2ID:
    Description: 'Get Private Subnet 2 ID from the VPCStack outputs section in CloudFormation.'
    Type: AWS::EC2::Subnet::Id
  NodeGroupSecurityGroupId:
    Description: 'Get NodeGroupSecurityGroupId from the EKSStack outputs section in CloudFormation.'
    Type: String
  BastionSecurityGroupId:
    Description: 'Get BastionSecurityGroupId from the EKSStack outputs section in CloudFormation.'
    Type: String
  VPCID:
    Type: AWS::EC2::VPC::Id
    Description: 'Get VCP ID from the VPCStack outputs section in CloudFormation.'
  DBAccessCIDR:
    AllowedPattern: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$"
    ConstraintDescription: "CIDR block parameter must be in the form x.x.x.x/x"
    Description: "Allowed CIDR block for external access (use VPC CIDR)."
    Type: String
    Default: 10.0.0.0/16
Conditions:
  UsingDefaultBucket: !Equals [!Ref QSS3BucketName, 'aws-quickstart']
Resources:
  DBIngressSG:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !GetAtt AuroraDB.Outputs.RDSSecurityGroup
      SourceSecurityGroupId: !Ref NodeGroupSecurityGroupId
      IpProtocol: tcp
      FromPort: !Ref DBPort
      ToPort: !Ref DBPort
      Description: "This rule is needed to allow RDS from the Node Instances."
  DBInboundRule:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !GetAtt AuroraDB.Outputs.RDSSecurityGroup
      SourceSecurityGroupId: !Ref BastionSecurityGroupId
      IpProtocol: tcp
      FromPort: !Ref DBPort
      ToPort: !Ref DBPort
      Description: "This rule is needed to allow RDS from the Node Instances."
  AuroraDB:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL:
        !Sub
        - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/aurora_mysql.template.yaml'
        - S3Region: !If [ UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion ]
          S3Bucket: !If [ UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName ]
      Parameters:
        Subnet1ID: !Ref Subnet1ID
        Subnet2ID: !Ref Subnet2ID
        VPCID: !Ref VPCID
        DBName: 'worpress'
        DBAutoMinorVersionUpgrade: "false"
        DBAllocatedStorageEncrypted: "true"
        DBBackupRetentionPeriod: 7
        DBEngineVersion: 'Aurora-MySQL5.7-2.08.2'
        DBUsername: !Ref DBUsername
        DBUserPassword: !Ref DBUserPassword
        DBPort: !Ref DBPort
        DBMultiAZ: "false"
        DBAccessCIDR: !Ref DBAccessCIDR
        NotificationList: ameighta@amazon.com
        QSS3BucketName: !Ref QSS3BucketName
        QSS3BucketRegion: !Ref QSS3BucketRegion
        QSS3KeyPrefix: !Ref QSS3KeyPrefix
        RotateDBPassword: "false"
  HelmExample:
    Type: "AWSQS::Kubernetes::Helm"
    Properties:
      ClusterID: !Ref ClusterName
      Namespace: !Ref Namespace
      Chart: stable/wordpress
      Name: !Ref Name
      Values:
        wordpressUsername: !Ref wordpressUsername
        wordpressPassword: !Ref wordpressPassword
        mariadb.enabled: false
        externalDatabase.host: !Sub ${AuroraDB.Endpoint.Address}
        externalDatabase.user: !Ref DBUsername
        externalDatabase.password: !Ref DBUserPassword
        externalDatabase.database: !Ref DBName
        externalDatabase.port: !Ref DBPort
  WPElbHostName:
    DependsOn: HelmExample
    Type: "Custom::KubeGet"
    Version: '1.0'
    Properties:
      ServiceToken: !Sub "arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:EKS-QuickStart-KubeGet-${ClusterName}"
      ClusterName: !Ref ClusterName
      Namespace: !Ref Namespace
      Name: !Sub 'service/${Name}-wordpress'
      JsonPath: '{.status.loadBalancer.ingress[0].hostname}'

Outputs:
  WPElbHostName:
    Value: !Ref WPElbHostName